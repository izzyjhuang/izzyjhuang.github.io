{"version":3,"sources":["components/UseTypeWriter.js","components/Banner.js","components/Header.js","components/ProjectEntry.js","components/ProjectAlbum.js","components/Projects.js","components/ProjectPost.js","components/AdventureEntry.js","components/AdventureAlbum.js","components/Adventures.js","components/AdventurePost.js","components/ExperienceEntry.js","components/ExperienceAlbum.js","components/Experience.js","components/StillWorking.js","components/Notes.js","components/Footer.js","components/LeafletMap.js","components/KMF_Map.js","App.js","reportWebVitals.js","index.js"],"names":["useTypewriter","fullText","typingSpeed","arguments","length","undefined","selectedLanguage","displayedText","setDisplayedText","useState","useEffect","index","intervalId","setInterval","prev","charAt","clearInterval","Banner","_ref","textTranslations","intro","English","中文","passion","photography","piano","text0","text1","text2","text3","handleScroll","bannerLogo0","document","querySelector","bannerOverlayLogo0","bannerLogo1","bannerOverlayLogo1","bannerLogo2","bannerOverlayLogo2","bannerLogo3","bannerOverlayLogo3","scrollPosition","window","scrollY","scaleValue","Math","min","rotateValue","style","transform","addEventListener","removeEventListener","React","createElement","className","src","alt","loading","Header","setSelectedLanguage","isDropdownVisible","setDropdownVisible","handleLanguageSelect","language","getText","textKey","Explorer","Projects","Adventures","Notes","Experience","Map","Link","to","onClick","toggleDropdown","ProjectEntry","Component","render","image_path","this","props","NeedworkSlugs","isExternal","slug","startsWith","linkPath","includes","endsWith","LinkComponent","linkProps","href","rel","caption","genre","ProjectAlbum","entries","itemlist","map","project","key","date","summary","banner","pagePhoto","sin","bannerLogo","bannerOverlayLogo","ProjectPost","useParams","find","entry","blogPost","content","type","header","text","src1","alt1","src2","alt2","src3","alt3","AdventureEntry","locationStyle","color","locationColor","textShadow","dateStyle","backgroundColor","location","AdventureAlbum","adventure","title","dates","countries","nationalParks","states","stadiums","bannerText","yearCount","text4","text5","text6","text7","text8","text9","AdventurePost","ExperienceEntry","whenStyle","when","description","ExperienceAlbum","experience","logo","whencolor","whenColor","StillWorking","Footer","target","FontAwesomeIcon","icon","faLinkedin","faXTwitter","faThreads","faEnvelope","visitedStates","LeafletMap","mapRef","useRef","hawaiiMapRef","alaskaMapRef","setUSDynamicView","centerCoordinates","screenWidth","innerWidth","zoomLevel","setView","setAlaskaDynamicView","setHawaiiDynamicView","current","L","tileLayer","attribution","subdomains","maxZoom","addTo","stateStyle","feature","fillColor","properties","STUSPS","weight","opacity","dashArray","fillOpacity","geojsonLayer","geoJSON","usStates","onEachFeature","layer","stateAbbreviation","stateName","NAME","bindTooltip","permanent","direction","openTooltip","on","click","alert","getZoom","eachLayer","setTooltipContent","alaskaMap","hawaiiMap","handleResize","id","width","height","KmfMap","markerData","forEach","person","customIcon","iconUrl","image","iconSize","iconAnchor","popupAnchor","marker","coordinates","popupContent","name","year","university","role","company","popup","maxWidth","closeOnClick","autoClose","setLatLng","setContent","openOn","Home","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.b0bfbffe.chunk.js","sourcesContent":["// UseTypeWriter.js\nimport { useEffect, useState } from 'react';\n\nconst useTypewriter = (fullText, typingSpeed = 40, selectedLanguage) => {\n    const [displayedText, setDisplayedText] = useState('');\n  \n    useEffect(() => {\n      setDisplayedText(''); // Clear the text when the language changes\n  \n      let index = 0;\n      const intervalId = setInterval(() => {\n        if (index < fullText.length) {\n          setDisplayedText((prev) => prev + fullText.charAt(index));\n          index++;\n        } else {\n          clearInterval(intervalId);\n        }\n      }, typingSpeed);\n  \n      return () => clearInterval(intervalId);\n    }, [fullText, typingSpeed, selectedLanguage]);\n  \n    return displayedText;\n  };\n\nexport default useTypewriter;","// Banner.js\nimport React, { useEffect } from 'react';\nimport './banner.css'; \nimport useTypewriter from './UseTypeWriter';\n\n\n\nconst Banner = ({ selectedLanguage }) => {\n  const textTranslations = {\n    intro: {\n      English: \"  Hi, I'm Izzy. I love exploring the world around me. Thanks for stopping by!\",\n      中文: \"  嗨，我是 Izzy。我喜歡探索我周圍美麗的世界。歡迎來到我的網站！\"\n    },\n    passion: {\n      English: \" Truth, improvement, and altruism fuel my passion as a multidisciplinary engineer.\",\n      中文: \" 追求真理、終身學習和利他主義激發了我作為多學科工程師的熱情。\"\n    },\n    photography: {\n      English: \" In my free time, I enjoy backpacking and capturing the wonders of nature with my camera!\",\n      中文: \" 在空閒時間，我喜歡背包旅行，並用相機捕捉大自然的奇觀！\"\n    },\n    piano: {\n      English: \" I also love attending classical concerts and playing the piano. Beethoven is my favorite composer!\",\n      中文: \" 我也喜歡參加古典音樂會和彈鋼琴。貝多芬是我最喜歡的作曲家！\"\n    }\n  };\n\n  const text0 = useTypewriter(textTranslations.intro[selectedLanguage], 20, selectedLanguage);\n  const text1 = useTypewriter(textTranslations.passion[selectedLanguage], 20, selectedLanguage);\n  const text2 = useTypewriter(textTranslations.photography[selectedLanguage], 20, selectedLanguage);\n  const text3 = useTypewriter(textTranslations.piano[selectedLanguage], 20, selectedLanguage);\n  \n  useEffect(() => {\n    const handleScroll = () => {\n      const bannerLogo0 = document.querySelector('.banner-logo-0');\n      const bannerOverlayLogo0 = document.querySelector('.banner-overlay-logo-0');\n\n      const bannerLogo1 = document.querySelector('.banner-logo-1');\n      const bannerOverlayLogo1 = document.querySelector('.banner-overlay-logo-1');\n\n      const bannerLogo2 = document.querySelector('.banner-logo-2');\n      const bannerOverlayLogo2 = document.querySelector('.banner-overlay-logo-2');\n      \n      const bannerLogo3 = document.querySelector('.banner-logo-3');\n      const bannerOverlayLogo3 = document.querySelector('.banner-overlay-logo-3');\n      const scrollPosition = window.scrollY;\n\n      // Calculate the degree of transformation based on scroll position\n      const scaleValue = Math.min(1, 1 + scrollPosition / 1000); // Adjust the divisor to control the scaling speed\n      const rotateValue = Math.min(scrollPosition % 720, 720 - scrollPosition % 720); // Rotate based on scroll position\n\n      // Apply transformations\n      bannerLogo0.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n      bannerOverlayLogo0.style.transform = `scale(${scaleValue})`;\n\n      bannerLogo1.style.transform = `scale(${scaleValue}) rotate(${-rotateValue}deg)`;\n      bannerOverlayLogo1.style.transform = `scale(${scaleValue})`;\n\n      bannerLogo2.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n      bannerOverlayLogo2.style.transform = `scale(${scaleValue})`;\n\n      bannerLogo3.style.transform = `scale(${scaleValue}) rotate(${-rotateValue}deg)`;\n      bannerOverlayLogo3.style.transform = `scale(${scaleValue})`;\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  \n  return (\n    <div>\n      <div className=\"banner-container\">\n        <div className=\"banner-image-overlay\">\n          <img className=\"banner-logo-0\" src=\"../images/home/izzy-pirate.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n          <img className=\"banner-overlay-logo-0\" src=\"../images/home/izzy-pirate-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n        </div>\n        <div className=\"banner-header-text\">\n          <h1>{text0}</h1>\n        </div>\n      </div>\n\n      <div className=\"banner-container\">\n        <div className=\"banner-header-text\">\n          <h1>{text1}</h1>\n        </div>\n        <div className=\"banner-image-overlay\">\n          <img className=\"banner-logo-1\" src=\"../images/home/izzy-professional.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n          <img className=\"banner-overlay-logo-1\" src=\"../images/home/izzy-professional-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n        </div>\n      </div>\n\n      <div className=\"banner-container\">\n        <div className=\"banner-image-overlay\">\n          <img className=\"banner-logo-2\" src=\"../images/home/izzy-photographer.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n          <img className=\"banner-overlay-logo-2\" src=\"../images/home/izzy-photographer-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n        </div>\n        <div className=\"banner-header-text\">\n          <h1>{text2}</h1>\n        </div>\n      </div>\n      <div className=\"banner-container\">\n        <div className=\"banner-header-text\">\n            <h1>{text3}</h1>\n          </div>\n          <div className=\"banner-image-overlay\">\n            <img className=\"banner-logo-3\" src=\"../images/home/izzy-piano.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n            <img className=\"banner-overlay-logo-3\" src=\"../images/home/izzy-piano-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css';\n\nconst Header = ({ selectedLanguage, setSelectedLanguage }) => {\n  const [isDropdownVisible, setDropdownVisible] = useState(false);\n\n  const toggleDropdown = () => {\n    setDropdownVisible(!isDropdownVisible);\n  };\n\n  const handleLanguageSelect = (language) => {\n    setSelectedLanguage(language);\n    setDropdownVisible(false);\n  };\n\n  const getText = (textKey) => {\n    const translations = {\n      Explorer: {\n        English: 'Izzy The Explorer',\n        中文: '探險家 Izzy',\n      },\n      Projects: {\n        English: 'Projects',\n        中文: '專案',\n      },\n      Adventures: {\n        English: 'Adventures',\n        中文: '冒險',\n      },\n      Notes: {\n        English: 'Notes',\n        中文: '筆記',\n      },\n      Experience: {\n        English: 'Experience',\n        中文: '經驗',\n      },\n      Map: {\n        English: 'Map',\n        中文: '地圖',\n      }\n    };\n    return translations[textKey][selectedLanguage];\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"logo-container\">\n        <Link to=\"/\">\n          <div className=\"image-overlay\">\n            <img className=\"logo\" src=\"../images/home/izzy-pirate.png\" loading=\"lazy\" alt=\"Izzy Logo\" />\n            <img className=\"overlay-logo\" src=\"../images/home/izzy-pirate-overlay.png\" loading=\"lazy\" alt=\"Overlay Logo\" />\n          </div>\n          <h1 className=\"header-text\">{getText('Explorer')}</h1>\n        </Link>\n      </div>\n      <nav className=\"nav-links\">\n        <Link to=\"/experience\" className=\"nav-link\">{getText('Experience')}</Link>\n        <Link to=\"/projects\" className=\"nav-link\">{getText('Projects')}</Link>\n        <Link to=\"/adventures\" className=\"nav-link\">{getText('Adventures')}</Link>\n        <Link to=\"/notes\" className=\"nav-link\">{getText('Notes')}</Link>\n        {/* <Link to=\"/map\" className=\"nav-link\">{getText('Map')}</Link> */}\n      </nav>\n      <div className=\"language-selector\" onClick={toggleDropdown}>\n        <span>{selectedLanguage}</span>\n        <i className=\"arrow-down\">▾</i>\n        {isDropdownVisible && (\n          <ul className=\"language-dropdown\">\n            <li onClick={() => handleLanguageSelect('English')}>English</li>\n            <li onClick={() => handleLanguageSelect('中文')}>中文</li>\n          </ul>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","// components/ProjectEntry.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './master.css';\nimport './projects.css';\n\nclass ProjectEntry extends React.Component {\n\n  render() {\n\n    const image_path = \"../images/projects/\" + this.props.src;\n\n    const NeedworkSlugs = [\n      'http://www.izzyjhuang.com',\n      'izzy-app',\n      'the-clampanion'\n  ];\n\n  const isExternal = this.props.slug.startsWith('http');\n\n  const linkPath = (() => {\n    if (isExternal) {\n      return this.props.slug; // External link\n    } else if (NeedworkSlugs.includes(this.props.slug)) {\n      return \"https://izzyjhuang.com/#/notes\"; // Redirect to the \"Still Working\" page\n    } else if (this.props.slug.endsWith(\".pdf\")) {\n      return `${process.env.PUBLIC_URL}/files/${this.props.slug}`; // Direct link to internal PDF file\n    } else {\n      return `${this.props.slug}`; // Redirect to internal blog post\n    }\n  })();\n\n  const LinkComponent = isExternal || this.props.slug.endsWith(\".pdf\") ? \"a\" : Link;\nconst linkProps = isExternal || this.props.slug.endsWith(\".pdf\")\n  ? { href: linkPath, rel: \"noopener noreferrer\" }\n  : { to: linkPath };\n\n  return (\n    <div className=\"project-container\">\n      <div className=\"project-entry-block\">\n        <LinkComponent {...linkProps}>\n          <img className=\"project-img\" src={image_path} alt={image_path} loading=\"lazy\" />\n          <div className=\"project-caption\">{this.props.caption}</div>\n          <div className=\"project-genre\">{this.props.genre}</div>\n        </LinkComponent>\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default ProjectEntry;","// components/ProjectAlbum.js\nimport React from 'react';\nimport ProjectEntry from './ProjectEntry';\nimport entries from './data/project-entries';\nimport './master.css';\nimport './projects.css';\n\nclass ProjectAlbum extends React.Component {\n\n    render() {\n\n        return (\n            <div className= \"flex-container\">\n            {\n                entries.itemlist.map((project) => {\n                    return <ProjectEntry \n                    key={project.src} \n                    src={project.src} \n                    slug={project.slug} \n                    caption={project.caption} \n                    date={project.date} \n                    genre={project.genre} \n                    summary={project.summary}\n                    banner={project.banner}/>\n                })\n            }\n            </div>\n        )\n    }\n};\n\nexport default ProjectAlbum;","// Projects.js\nimport React, { useEffect } from 'react';\nimport ProjectAlbum from './ProjectAlbum';\nimport useTypewriter from './UseTypeWriter'; // Import the custom hook\nimport './master.css';\n\n\nconst Projects = ({ selectedLanguage }) => {\n     // Define translations for the full text\n     const textTranslations = {\n      English: \"  You can't use up creativity. The more you use, the more you have!\",\n      中文: \"  創造力是無窮無盡的，你用越多，你擁有的就越多！\"\n  };\n\n  // Get the full text based on the selected language\n  const fullText = textTranslations[selectedLanguage] || textTranslations['English'];\n\n  // Use the custom useTypewriter hook\n  const displayedText = useTypewriter(fullText, 20, selectedLanguage);\n\n  // Scroll event handling for image scaling and rotation\n  useEffect(() => {\n      const handleScroll = () => {\n          const pagePhoto = document.querySelector('.banner-logo-p');\n          const scrollPosition = window.scrollY;\n\n          const scaleValue = 0.95 + Math.sin((scrollPosition + 180) / 60) / 10; // Control scaling\n          const rotateValue = Math.sin(scrollPosition / 60) * 30; // Rotate based on scroll\n\n          pagePhoto.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n      };\n\n      window.addEventListener('scroll', handleScroll);\n\n      // Cleanup function to remove scroll listener when component unmounts\n      return () => {\n          window.removeEventListener('scroll', handleScroll);\n      };\n  }, []); // Empty dependency array to run only on mount/unmount\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const bannerLogo = document.querySelector('.banner-logo-p');\n      const bannerOverlayLogo = document.querySelector('.banner-overlay-logo-p');\n      const scrollPosition = window.scrollY;\n\n      // Calculate the degree of transformation based on scroll position\n      const scaleValue = Math.min(1, 1 + scrollPosition / 1000); // Adjust the divisor to control the scaling speed\n      const rotateValue = Math.min(scrollPosition % 720, 720 - scrollPosition % 720); // Rotate based on scroll position\n\n      // Apply transformations\n      bannerLogo.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n      bannerOverlayLogo.style.transform = `scale(${scaleValue})`;\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n\n    return (\n        <div>\n          <div className=\"page-warmer\">\n            <div className=\"banner-image-overlay-p\">\n              <img className=\"banner-logo-p\" src=\"../images/home/izzy-photographer.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n              <img className=\"banner-overlay-logo-p\" src=\"../images/home/izzy-photographer-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n            </div>                \n            <h1 className=\"page-text\">{displayedText}</h1> \n            </div>\n          <ProjectAlbum />\n        </div>\n      );\n};\n\nexport default Projects;","// ProjectPost.js\nimport React from 'react'\nimport { useParams } from 'react-router-dom'\nimport entries from './data/project-entries'\nimport './projects.css'\n\nconst ProjectPost = () => {\n    const { slug } = useParams()\n\n    // Find the corresponding project entry by its slug\n    const project = entries.itemlist.find(entry => entry.slug === slug)\n\n    if (!project) {\n        return <div>project not found</div>\n    }\n\n    return (\n        <div className=\"project-post\">\n            <img className=\"project-banner\" src={`../images/projects/${project.banner}`} alt={project.caption}  loading=\"lazy\"/>\n            <div className=\"project-poster\">\n                <h2 className=\"project-post-genre\">{project.genre}</h2>\n                <h1 className=\"project-post-caption\">{project.caption}</h1>\n                <h3 className=\"project-dates\">{project.date}</h3>\n                <div className=\"project-blog-content\">\n                {/* Loop through the blog content and render paragraphs and images */}\n                {project.blogPost.map((content, index) => {\n                    if (content.type === 'paragraph') {\n                        return (\n                            <div className=\"paragraph\" key={`${slug}-paragraph-${index}`}>\n                                <h4>{content.header}</h4>\n                                <p>{content.text}</p>\n                            </div>\n                        )\n                    } else if (content.type === 'images-3') {\n                        return (\n                            <div className=\"images-3\" key={`${slug}-images3-${index}`}>\n                                <div className=\"image-box\">\n                                    <img src={`../images/projects/${content.src1}`} alt={content.alt1} loading=\"lazy\"/>\n                                    <h5>{content.alt1}</h5>\n                                </div>\n                                <div className=\"image-box\">\n                                    <img src={`../images/projects/${content.src2}`} alt={content.alt2} loading=\"lazy\"/>\n                                    <h5>{content.alt2}</h5>\n                                </div>\n                                <div className=\"image-box\">\n                                    <img src={`../images/projects/${content.src3}`} alt={content.alt3} loading=\"lazy\"/>\n                                    <h5>{content.alt3}</h5>\n                                </div>\n                            </div>\n                        )\n                    } else if (content.type === 'images-2') {\n                        return (\n                            <div className=\"images-2\" key={`${slug}-images2-${index}`}>\n                                <div className=\"image-box\">\n                                    <img src={`../images/projects/${content.src1}`} alt={content.alt1} loading=\"lazy\"/>\n                                    <h5>{content.alt1}</h5>\n                                </div>\n                                <div className=\"image-box\">\n                                    <img src={`../images/projects/${content.src2}`} alt={content.alt2} loading=\"lazy\"/>\n                                    <h5>{content.alt2}</h5>\n                                </div>\n                            </div>\n                        )\n                    } else if (content.type === 'image-left') {\n                        return (\n                            <div className=\"image-left\" key={`${slug}-imageleft-${index}`}>\n                                <div className=\"image-box\">\n                                    <img src={`../images/projects/${content.src}`} alt={content.alt} loading=\"lazy\"/>\n                                    <h5>{content.alt}</h5>\n                                </div>\n                                <p>{content.text}</p>\n                            </div>\n                        )\n                    } else if (content.type === 'image-right') {\n                        return (\n                            <div className=\"image-right\" key={`${slug}-imageright-${index}`}>\n                                <p>{content.text}</p>\n                                <div className=\"image-box\">\n                                    <img src={`../images/projects/${content.src}`} alt={content.alt} loading=\"lazy\"/>\n                                    <h5>{content.alt}</h5>\n                                </div>\n                            </div>\n                        )\n                    } else if (content.type === 'image') {\n                        return (\n                            <img key={`${slug}-image-${index}`} src={`../images/projects/${content.src}`} alt={content.alt} className=\"project-sub-img\" loading=\"lazy\"/>\n                        )\n                    } else {\n                        return null\n                    }\n                })}\n            </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default ProjectPost","// AdventureEntry.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass AdventureEntry extends React.Component {\n\n    render() {\n        const image_path = \"../images/adventures/\" + this.props.src;\n\n        // Dynamic inline style for location color\n        const locationStyle = {\n            color: this.props.locationColor || \"#043fac\", // Default to blue if color is not provided\n            textShadow: `0.75px 0.75px 1.5px ${this.props.locationColor || \"#043fac\"}`\n        };\n        const dateStyle = {\n            backgroundColor: this.props.locationColor || \"#043fac\" // Default to blue if color is not provided\n        };\n\n        const CompletedSlugs = [\n            'hvolsvollur-0824',\n            'albania-1223',\n            'hungary-0323',\n            'slovakia-0323',\n            'austria-0323',\n            'czechia-0323'\n        ];\n\n        const linkPath = CompletedSlugs.includes(this.props.slug) \n            ? `/adventures/${this.props.slug}` \n            : \"/notes\"; \n\n\n        return (\n            <div className=\"adventure-container\">\n                <div className=\"adventure-entry-block\">\n                    <Link to={linkPath}>\n                    {/* <div className=\"adventure-topblock\"> */}\n                        <img className=\"adventure-img\" src={image_path} alt={image_path} loading=\"lazy\"/>\n                        <div className=\"adventure-caption\">{this.props.caption}</div>\n                    {/* </div>\n                    <div className=\"adventure-bottomblock\"> */}\n                        <div className=\"adventure-date\" style={dateStyle}>{this.props.date}</div>\n                        <div className=\"adventure-location\" style={locationStyle}>{this.props.location}</div>\n                    {/* </div> */}\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AdventureEntry;","// AdventureAlbum.js\nimport React from 'react';\nimport AdventureEntry from './AdventureEntry';\nimport entries from './data/adventure-entries';\n\nclass AdventureAlbum extends React.Component {\n\n    render() {\n\n        return (\n            <div className= \"flex-container\">\n            {\n                entries.itemlist.map((adventure) => {\n                    return <AdventureEntry \n                    key={adventure.src} \n                    src={adventure.src} \n                    location={adventure.location} \n                    locationColor={adventure.locationColor}\n                    date={adventure.date} \n                    caption={adventure.caption} \n                    slug={adventure.slug}\n                    genre={adventure.genre}\n                    title={adventure.title}\n                    dates={adventure.dates}/>\n                })\n            }\n            </div>\n        )\n    }\n}\n\nexport default AdventureAlbum;","// Adventures.js\nimport React, { useEffect } from 'react';\nimport AdventureAlbum from './AdventureAlbum';\nimport useTypewriter from './UseTypeWriter'; // Import the custom hook\nimport \"./master.css\";\nimport \"./adventures.css\";\n\nconst Adventures = ({ selectedLanguage }) => {\n    // Define translations for the full text\n    const textTranslations = {\n        countries: {\n            English: \"  13 countries\",\n            中文: \"  13 個國家\"\n        },\n        nationalParks: {\n            English: \"  6 National Parks\",\n            中文: \"  6 個國家公園\"\n        },\n        states: {\n            English: \"  21 States\",\n            中文: \"  21 個州\"\n        },\n        stadiums: {\n            English: \"  5 Stadiums\",\n            中文: \"  5 座棒球場\"\n        },\n        bannerText: {\n            English: \"  My favorite adventure was going Skydiving in Utah! I'll be visiting Hobbiton in New Zealand soon!\",\n            中文: \"  我最喜歡的冒險是去猶他州跳傘！我接下來要去紐西蘭看拍攝哈比人的哈比屯！\"\n        },\n        yearCount: {\n            English: \"  this year\",\n            中文: \"  今年新造訪\"\n        }\n    };    \n\n    // Get the full text based on the selected language\n    // const fullText = textTranslations[selectedLanguage] || textTranslations['English'];\n\n    // Use the custom useTypewriter hook\n    // const displayedText = useTypewriter(textTranslations.intro[selectedLanguage], 20, selectedLanguage);\n    const text4 = useTypewriter(textTranslations.countries[selectedLanguage], 20, selectedLanguage);\n    const text5 = useTypewriter(textTranslations.nationalParks[selectedLanguage], 20, selectedLanguage);\n    const text6 = useTypewriter(textTranslations.states[selectedLanguage], 20, selectedLanguage);\n    const text7 = useTypewriter(textTranslations.stadiums[selectedLanguage], 20, selectedLanguage);\n    const text8 = useTypewriter(textTranslations.bannerText[selectedLanguage], 20, selectedLanguage);\n    const text9 = useTypewriter(textTranslations.yearCount[selectedLanguage], 20, selectedLanguage);\n    // Scroll event handling for image scaling and rotation\n    useEffect(() => {\n        const handleScroll = () => {\n            const pagePhoto = document.querySelector('.page-photo');\n            const scrollPosition = window.scrollY;\n\n            const scaleValue = 0.95 + Math.sin((scrollPosition + 180) / 20) / 10; // Control scaling\n            const rotateValue = Math.sin(scrollPosition / 60) * 30; // Rotate based on scroll\n\n            pagePhoto.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n        };\n\n        window.addEventListener('scroll', handleScroll);\n\n        // Cleanup function to remove scroll listener when component unmounts\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []); // Empty dependency array to run only on mount/unmount\n\n    return (\n        <div>\n            <div className=\"page-warmer\">\n                <img className=\"page-photo\" src=\"../images/adventures/skydive-moab.png\" alt=\"skydive-moab\" loading=\"lazy\" />\n                <p className=\"page-text-1\">{text8}</p> {/* Display the typing text */}\n            </div>\n            \n      <div className=\"stat-container\">\n        <div className=\"stat-box\">\n          <img src=\"../images/adventures/countries-count.png\" alt=\"Countries Logo\"></img>\n          <p>{text4}</p>\n          <h6>+3{text9}</h6>\n        </div>\n        <div className=\"stat-box\">\n          <img src=\"../images/adventures/national-parks-count.png\" alt=\"Countries Logo\"></img>\n          <p>{text5}</p>\n          <h6>+2{text9}</h6>\n        </div>\n        <div className=\"stat-box\">\n          <img src=\"../images/adventures/states-count.png\" alt=\"Countries Logo\"></img>\n          <p>{text6}</p>\n          <h6>+3{text9}</h6>\n        </div>\n        <div className=\"stat-box\">\n          <img src=\"../images/adventures/stadiums-count.png\" alt=\"Countries Logo\"></img>\n          <p>{text7}</p>\n          <h6>+2{text9}</h6>\n        </div>\n      </div>\n            <AdventureAlbum />\n        </div>\n    );\n}\n\nexport default Adventures;","// AdventurePost.js\nimport React from 'react'\nimport { useParams } from 'react-router-dom'\nimport entries from './data/adventure-entries'\nimport './adventures.css'\n\nconst AdventurePost = () => {\n    const { slug } = useParams()\n\n    // Find the corresponding adventure entry by its slug\n    const adventure = entries.itemlist.find(entry => entry.slug === slug)\n\n    if (!adventure) {\n        return <div>Adventure not found</div>\n    }\n\n    return (\n        <div className=\"adventure-post\">\n            <img className=\"adventure-banner\" src={`../images/adventures/${adventure.banner}`} alt={adventure.caption}  loading=\"lazy\"/>\n            <div className=\"adventure-poster\">\n                <h2 className=\"adventure-genre\">{adventure.genre}</h2>\n                <h1 className=\"adventure-title\">{adventure.title}</h1>\n                <h3 className=\"adventure-dates\">{adventure.dates}</h3>\n                <div className=\"adventure-blog-content\">\n                {/* Loop through the blog content and render paragraphs and images */}\n                {adventure.blogPost.map((content, index) => {\n                    if (content.type === 'paragraph') {\n                        return (\n                            <div className=\"paragraph\" key={`${slug}-paragraph-${index}`}>\n                                <h4>{content.header}</h4>\n                                <p>{content.text}</p>\n                            </div>\n                        )\n                    } else if (content.type === 'images-3') {\n                        return (\n                            <div className=\"images-3\" key={`${slug}-images3-${index}`}>\n                                <div className=\"image-box\">\n                                    <img src={`../images/adventures/${content.src1}`} alt={content.alt1} loading=\"lazy\"/>\n                                    <h5>{content.alt1}</h5>\n                                </div>\n                                <div className=\"image-box\">\n                                    <img src={`../images/adventures/${content.src2}`} alt={content.alt2} loading=\"lazy\"/>\n                                    <h5>{content.alt2}</h5>\n                                </div>\n                                <div className=\"image-box\">\n                                    <img src={`../images/adventures/${content.src3}`} alt={content.alt3} loading=\"lazy\"/>\n                                    <h5>{content.alt3}</h5>\n                                </div>\n                            </div>\n                        )\n                    } else if (content.type === 'images-2') {\n                        return (\n                            <div className=\"images-2\" key={`${slug}-images2-${index}`}>\n                                <img src={`../images/adventures/${content.src1}`} alt={content.alt1} loading=\"lazy\"/>\n                                <img src={`../images/adventures/${content.src2}`} alt={content.alt2} loading=\"lazy\"/>\n                            </div>\n                        )\n                    } else if (content.type === 'image') {\n                        return (\n                            <img key={`${slug}-image-${index}`} src={`../images/adventures/${content.src}`} alt={content.alt} className=\"adventure-sub-img\" loading=\"lazy\"/>\n                        )\n                    } else {\n                        return null\n                    }\n                })}\n            </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default AdventurePost","// ExperienceEntry.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ExperienceEntry extends React.Component {\n\n    render() {\n        const image_path = \"../images/experience/\" + this.props.src;\n\n        // Dynamic inline style for location color\n        const locationStyle = {\n            color: this.props.locationColor || \"#043fac\", // Default to blue if color is not provided\n            textShadow: `0.75px 0.75px 1.5px ${this.props.locationColor || \"#043fac\"}`\n        };\n\n        const whenStyle = {\n            backgroundColor: this.props.locationColor || \"#043fac\" // Default to blue if color is not provided\n        };\n\n        const CompletedSlugs = [];\n\n        const linkPath = CompletedSlugs.includes(this.props.slug) \n            ? `/experience/${this.props.slug}` \n            : \"/notes\"; \n\n\n        return (\n            <div className=\"experience-container\">\n                <div className=\"experience-entry-block\">\n                    <Link to={linkPath}>\n                        <img className=\"experience-img\" src={image_path} alt={image_path} loading=\"lazy\"/>\n                        <div className=\"experience-caption\">{this.props.caption}</div>\n                        <div className=\"experience-when\" style={whenStyle}>{this.props.when}</div>\n                        <div className=\"experience-description\" style={locationStyle}>{this.props.description}</div>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExperienceEntry;","// ExperienceAlbum.js\nimport React from 'react';\nimport ExperienceEntry from './ExperienceEntry';\nimport entries from './data/experience-entries';\n\nclass ExperienceAlbum extends React.Component {\n\n    render() {\n\n        return (\n            <div className= \"flex-container\">\n            {\n                entries.itemlist.map((experience) => {\n                    return <ExperienceEntry \n                    key={experience.src} \n                    src={experience.src} \n                    logo={experience.logo} \n                    caption={experience.caption}\n                    when={experience.when}\n                    whencolor={experience.whenColor} \n                    slug={experience.slug}\n                    description={experience.description}/>\n                })\n            }\n            </div>\n        )\n    }\n}\n\nexport default ExperienceAlbum;","// Experience.js\nimport React, { useEffect } from 'react';\nimport ExperienceAlbum from './ExperienceAlbum';\nimport useTypewriter from './UseTypeWriter'; // Import the custom hook\nimport \"./master.css\";\nimport \"./experience.css\";\n\nconst Experience = ({ selectedLanguage }) => {\n    // Define translations for the full text\n    const textTranslations = {\n        English: \"  \\\"Whatever you do, work at it with all your heart, as working for the Lord, not for human masters.\\\"\",\n        中文: \"  「無論做甚麼，都要全心全意地做，像是給主做的，不是給人做的。」\"\n    };\n\n    // Get the full text based on the selected language\n    const fullText = textTranslations[selectedLanguage] || textTranslations['English'];\n\n    // Use the custom useTypewriter hook\n    const displayedText = useTypewriter(fullText, 20, selectedLanguage);\n\n    // Scroll event handling for image scaling and rotation\n    useEffect(() => {\n        const handleScroll = () => {\n            const pagePhoto = document.querySelector('.banner-logo-e');\n            const scrollPosition = window.scrollY;\n\n            const scaleValue = 0.95 + Math.sin((scrollPosition + 180) / 60) / 10; // Control scaling\n            const rotateValue = Math.sin(scrollPosition / 60) * 30; // Rotate based on scroll\n\n            pagePhoto.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n        };\n\n        window.addEventListener('scroll', handleScroll);\n\n        // Cleanup function to remove scroll listener when component unmounts\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []); // Empty dependency array to run only on mount/unmount\n\n    useEffect(() => {\n      const handleScroll = () => {\n        const bannerLogo = document.querySelector('.banner-logo-e');\n        const bannerOverlayLogo = document.querySelector('.banner-overlay-logo-e');\n        const scrollPosition = window.scrollY;\n  \n        // Calculate the degree of transformation based on scroll position\n        const scaleValue = Math.min(1, 1 + scrollPosition / 1000); // Adjust the divisor to control the scaling speed\n        const rotateValue = Math.min(scrollPosition % 720, 720 - scrollPosition % 720); // Rotate based on scroll position\n  \n        // Apply transformations\n        bannerLogo.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n        bannerOverlayLogo.style.transform = `scale(${scaleValue})`;\n      };\n  \n      window.addEventListener('scroll', handleScroll);\n  \n      return () => {\n        window.removeEventListener('scroll', handleScroll);\n      };\n    }, []);\n\n    return (\n        <div>\n            <div className=\"page-warmer\">\n            <div className=\"banner-image-overlay-e\">\n              <img className=\"banner-logo-e\" src=\"../images/home/izzy-professional.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n              <img className=\"banner-overlay-logo-e\" src=\"../images/home/izzy-professional-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n            </div>                \n            <h1 className=\"page-text\">{displayedText}</h1> \n            </div>\n            <ExperienceAlbum />\n        </div>\n    );\n}\n\nexport default Experience;","// still-working.js\nimport React from 'react';\nimport './stillworking.css'; \nimport useTypewriter from './UseTypeWriter';\n\n\n\nconst StillWorking = ({ selectedLanguage }) => {\n  const textTranslations = {\n      English: \"  I'm still working on this one, stay tuned!\",\n      中文: \"  這篇我快做出來了，敬請期待！\"\n  };\n\n  // const fallbackLanguage = 'English';\n  const fullText = textTranslations[selectedLanguage] || textTranslations[\"English\"];\n\n  const displayedText = useTypewriter(fullText, 20, selectedLanguage);\n\n  return (\n    <div>\n      <div className=\"still-working-container\">\n          <img className=\"still-working-img\" src=\"images/home/still-working.jpg\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n        <div className=\"still-working-header-text\">\n          <h1>{displayedText}</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StillWorking;","// Notes.js\nimport React from 'react';\nimport StillWorking from './StillWorking';\n\nconst Notes = ({ selectedLanguage }) => {\n    return (\n      <div>\n        {/* Pass the selectedLanguage prop to StillWorking */}\n        <StillWorking selectedLanguage={selectedLanguage} />\n      </div>\n    );\n  };\n\nexport default Notes;","import React from 'react';\nimport './footer.css'; // Assuming you store the CSS in Footer.css\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // Import FontAwesome\nimport { faThreads, faXTwitter, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons'; // For non-branded icons\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-container\">\n      <div className=\"footer-icons\">\n      <a href=\"https://linkedin.com/in/izzyhuang\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <FontAwesomeIcon icon={faLinkedin} /> \n          <span>LinkedIn</span>\n        </a>\n        <a href=\"https://x.com/izzyjhuang\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <FontAwesomeIcon icon={faXTwitter} />\n          <span>Twitter</span>\n        </a>\n        <a href=\"https://www.threads.net/@izh_27\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <FontAwesomeIcon icon={faThreads} />\n          <span>Threads</span>\n        </a>\n        <a href=\"mailto:izzythebroker@gmail.com\">\n          <FontAwesomeIcon icon={faEnvelope} /> \n          <span>Email</span>\n        </a>\n      </div>\n\n        <div className=\"footer-links\">\n            <h5>This website was built with \n                <a href=\"https://react.dev/\" target=\"_blank\" rel=\"noopener noreferrer\"> ReactJS</a>\n            </h5>\n            <h5>© Copyright 2024 Izzy Huang</h5>\n        </div>\n    </div>\n  );\n}\n\nexport default Footer;","import React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './leafletmap.css';\nimport usStates from './data/usStatesGeoJSON.json'; // Import the US states GeoJSON\n\nconst visitedStates = [\"CA\", \"IL\", \"IN\", \"KY\", \"IA\", \"MI\", \"MN\", \"WI\", \"PA\", \"NY\", \"NJ\", \n    \"MA\", \"CT\", \"RI\", \"NV\", \"UT\", \"AZ\", \"WY\", \"NE\", \"CO\", \"TX\"];\n\nconst LeafletMap = () => {\n  const mapRef = useRef(null); // To store the main map instance\n  const hawaiiMapRef = useRef(null); // To store the Hawaii map instance\n  const alaskaMapRef = useRef(null); // To store the Alaska map instance\n\n  // Function to dynamically set the view and zoom based on window size\n  const setUSDynamicView = (map, centerCoordinates) => {\n    const screenWidth = window.innerWidth;\n\n    // Set zoom level based on screen width\n    const zoomLevel = screenWidth >= 2048 ? 5 : screenWidth >= 1024 ? 4 : 3;\n\n    // Set map center and zoom dynamically\n    map.setView(centerCoordinates, zoomLevel);\n  };\n\n  const setAlaskaDynamicView = (map, centerCoordinates) => {\n    const screenWidth = window.innerWidth;\n\n    // Set zoom level based on screen width\n    const zoomLevel = screenWidth >= 2048 ? 3 : screenWidth >= 1024 ? 2 : 1;\n\n    // Set map center and zoom dynamically\n    map.setView(centerCoordinates, zoomLevel);\n  };\n\n  const setHawaiiDynamicView = (map, centerCoordinates) => {\n    const screenWidth = window.innerWidth;\n\n    // Set zoom level based on screen width\n    const zoomLevel = screenWidth >= 2048 ? 6 : screenWidth >= 1024 ? 5 : 4;\n\n    // Set map center and zoom dynamically\n    map.setView(centerCoordinates, zoomLevel);\n  };\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      // Initialize the main map focused on the continental US\n      const map = L.map('map');\n      mapRef.current = map;\n      setUSDynamicView(map, [37.8, -101]); // Dynamic view based on window size\n\n      // Add tile layer for the main map\n      L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n        attribution: '&copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n        subdomains: 'abcd',\n        maxZoom: 19\n      }).addTo(map);\n\n      // Define the style for states\n      const stateStyle = (feature) => ({\n        fillColor: visitedStates.includes(feature.properties.STUSPS) ? '#ACD8A7' : '#808080',\n        weight: 2,\n        opacity: 1,\n        color: 'white',\n        dashArray: '3',\n        fillOpacity: 0.9\n      });\n\n      // Add GeoJSON layer for the continental US\n      const geojsonLayer = L.geoJSON(usStates, {\n        style: stateStyle,\n        onEachFeature: (feature, layer) => {\n          const stateAbbreviation = feature.properties.STUSPS;\n          const stateName = feature.properties.NAME;\n\n          // Initial tooltip with the state abbreviation\n          layer.bindTooltip(stateAbbreviation, {\n            permanent: true,\n            direction: 'center',\n            className: 'state-label'\n          }).openTooltip();\n\n          // Add a click event to show the full state name\n          layer.on({\n            click: () => alert(`You clicked on ${stateName}`)\n          });\n        }\n      }).addTo(map);\n\n      // Listen to zoom changes to update tooltips\n      map.on('zoomend', () => {\n        const zoomLevel = map.getZoom();\n        geojsonLayer.eachLayer((layer) => {\n          const feature = layer.feature;\n          const stateAbbreviation = feature.properties.STUSPS;\n          const stateName = feature.properties.NAME;\n\n          if (zoomLevel >= 7) {\n            layer.setTooltipContent(stateName);\n          } else {\n            layer.setTooltipContent(stateAbbreviation);\n          }\n        });\n      });\n    }\n\n    if (!alaskaMapRef.current) {\n        const alaskaMap = L.map('alaska-map');\n        alaskaMapRef.current = alaskaMap;\n        setAlaskaDynamicView(alaskaMap, [64.2, -155]); // Dynamic view for Alaska\n\n        L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n          attribution: '&copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n          subdomains: 'abcd',\n          maxZoom: 19\n        }).addTo(alaskaMap);\n\n        const stateStyle = (feature) => ({\n            fillColor: visitedStates.includes(feature.properties.STUSPS) ? '#ACD8A7' : '#808080',\n            weight: 2,\n            opacity: 1,\n            color: 'white',\n            dashArray: '3',\n            fillOpacity: 0.9\n          });\n\n        L.geoJSON(usStates, {\n          style: stateStyle,\n        }).addTo(alaskaMap);\n      }\n\n    if (!hawaiiMapRef.current) {\n      const hawaiiMap = L.map('hawaii-map');\n      hawaiiMapRef.current = hawaiiMap;\n      setHawaiiDynamicView(hawaiiMap, [21, -157]); // Dynamic view for Hawaii\n\n      L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n        attribution: '&copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n        subdomains: 'abcd',\n        maxZoom: 19\n      }).addTo(hawaiiMap);\n\n      const stateStyle = (feature) => ({\n        fillColor: visitedStates.includes(feature.properties.STUSPS) ? '#ACD8A7' : '#808080',\n        weight: 2,\n        opacity: 1,\n        color: 'white',\n        dashArray: '3',\n        fillOpacity: 0.9\n      });\n\n      L.geoJSON(usStates, {\n        style: stateStyle,\n      }).addTo(hawaiiMap);\n    }\n\n    // Add event listener to adjust map view dynamically when the window is resized\n    const handleResize = () => {\n      if (mapRef.current) {\n        setUSDynamicView(mapRef.current, [37.8, -101]); // Continental US\n      }\n      if (alaskaMapRef.current) {\n        setAlaskaDynamicView(alaskaMapRef.current, [64.2, -155]); // Alaska\n      }\n      if (hawaiiMapRef.current) {\n        setHawaiiDynamicView(hawaiiMapRef.current, [21, -157]); // Hawaii\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup event listener on unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <div className=\"map-container\">\n      <div id=\"map\" style={{ width: '100%', height: '100%' }}></div>\n      <div className=\"side-maps\">\n        <div id=\"alaska-map\" className=\"small-map\"></div>\n        <div id=\"hawaii-map\" className=\"small-map\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default LeafletMap;\n","import React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './leafletmap.css'; // Your custom styles\nimport markerData from './data/kmf-map-entries.json'; // Import the JSON file\n\nconst KmfMap = () => {\n  const mapRef = useRef(null); // To store map instance\n\n  useEffect(() => {\n    // Calculate screen width and set the appropriate zoom level\n    const setUSDynamicView = (map, centerCoordinates) => {\n      const screenWidth = window.innerWidth;\n      const zoomLevel = screenWidth >= 2048 ? 6 : screenWidth >= 1024 ? 5 : screenWidth >= 767 ? 4 : 3;\n          // Set map center and zoom dynamically\n        map.setView(centerCoordinates, zoomLevel);\n      };\n\n    if (!mapRef.current) {\n      // Initialize the map with dynamic zoom level\n      const map = L.map('map'); // Center on US, zoom based on screen size\n      mapRef.current = map; // Store the map instance in the ref\n      setUSDynamicView(map, [37.8, -96]); // Dynamic view based on window size\n\n\n      // Add a tile layer (map style)\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n\n      // Loop through the marker data from JSON and create markers dynamically\n      markerData.forEach((person) => {\n        // Define a custom icon for each person based on their image field\n        const customIcon = L.icon({\n          iconUrl: person.image, // Use the image field from the JSON\n          iconSize: [25, 25], // Size of the icon in pixels (adjust as needed)\n          iconAnchor: [25, 50], // Point where the icon is anchored (center bottom)\n          popupAnchor: [0, -50], // Point where the popup should open relative to the icon anchor\n        });\n\n        // Add the marker with the custom icon\n        const marker = L.marker(person.coordinates, { icon: customIcon }).addTo(map);\n\n        // Define the content for the popup\n        const popupContent = `\n          <b>${person.name}</b><br>\n          ${person.year}<br>\n          ${person.university}<br>\n          ${person.role}<br>\n          ${person.company}\n        `;\n\n        // On click, create and open a new popup for each marker\n        marker.on('click', () => {\n          L.popup({\n            maxWidth: 250,\n            closeOnClick: false, // Keep the popups open even when clicking on the map\n            autoClose: false // Disable auto-close of popups when others are opened\n          })\n          .setLatLng(person.coordinates)\n          .setContent(popupContent)\n          .openOn(map);\n        });\n      });\n    }\n\n    // Add event listener to adjust map view dynamically when the window is resized\n    const handleResize = () => {\n      if (mapRef.current) {\n        setUSDynamicView(mapRef.current, [37.8, -101]); // Continental US\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup event listener on unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []); // The empty array ensures this effect runs only once (on mount)\n\n  \n  return (\n    <div className=\"kmf-map-container\">\n      <div id=\"map\" style={{ width: '100%', height: '100%' }}></div>\n    </div>\n  );\n};\n\nexport default KmfMap;\n","import React, { useState } from 'react';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport Banner from './components/Banner';\nimport Header from './components/Header';\nimport Projects from './components/Projects';\nimport ProjectPost from './components/ProjectPost';\nimport Adventures from './components/Adventures';\nimport AdventurePost from './components/AdventurePost';\nimport Experience from './components/Experience';\nimport Notes from './components/Notes';\nimport Footer from './components/Footer';\nimport LeafletMap from './components/LeafletMap'; // Import the new LeafletMap component\nimport KmfMap from './components/KMF_Map'; // Import the new LeafletMap component\nimport './App.css';\n\nfunction App() { \n  const [selectedLanguage, setSelectedLanguage] = useState('English');\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header selectedLanguage={selectedLanguage} setSelectedLanguage={setSelectedLanguage} />\n        \n        <Routes>\n          <Route path=\"/\" element={<Home selectedLanguage={selectedLanguage} />} />\n          <Route path=\"/projects\" element={<Projects selectedLanguage={selectedLanguage}/>} />\n          <Route path=\"/projects/:slug\" element={<ProjectPost selectedLanguage={selectedLanguage}/>} />\n          <Route path=\"/adventures\" element={<Adventures selectedLanguage={selectedLanguage} />} />\n          <Route path=\"/adventures/:slug\" element={<AdventurePost selectedLanguage={selectedLanguage}/>} />\n          <Route path=\"/notes\" element={<Notes selectedLanguage={selectedLanguage} />} />\n          <Route path=\"/experience\" element={<Experience selectedLanguage={selectedLanguage} />}/>\n          <Route path=\"/map\" element={<LeafletMap />} /> {/* New route for the Leaflet map */}\n          <Route path=\"/kmfmap\" element={<KmfMap />} /> {/* New route for the Leaflet map */}\n        </Routes>\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nconst Home = ({ selectedLanguage }) => (\n  <div>\n    <Banner selectedLanguage={selectedLanguage} />\n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}