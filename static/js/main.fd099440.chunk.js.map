{"version":3,"sources":["components/UseTypeWriter.js","components/Banner.js","components/Header.js","components/ProjectEntry.js","components/ProjectAlbum.js","components/Projects.js","components/AdventureEntry.js","components/AdventureAlbum.js","components/Adventures.js","components/AdventurePost.js","components/ExperienceEntry.js","components/ExperienceAlbum.js","components/Experience.js","components/StillWorking.js","components/Notes.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["useTypewriter","fullText","typingSpeed","arguments","length","undefined","selectedLanguage","displayedText","setDisplayedText","useState","useEffect","index","intervalId","setInterval","prev","charAt","clearInterval","Banner","_ref","textTranslations","intro","English","中文","passion","photography","piano","countries","nationalParks","states","text0","text1","text2","text3","text4","text5","text6","handleScroll","bannerLogo0","document","querySelector","bannerOverlayLogo0","bannerLogo1","bannerOverlayLogo1","bannerLogo2","bannerOverlayLogo2","bannerLogo3","bannerOverlayLogo3","scrollPosition","window","scrollY","scaleValue","Math","min","rotateValue","style","transform","addEventListener","removeEventListener","React","createElement","className","src","alt","loading","Header","setSelectedLanguage","isDropdownVisible","setDropdownVisible","handleLanguageSelect","language","getText","textKey","Explorer","Projects","Adventures","Notes","Experience","Link","to","onClick","toggleDropdown","ProjectEntry","Component","render","image_path","this","props","isExternal","slug","startsWith","linkPath","includes","href","target","rel","caption","genre","ProjectAlbum","entries","itemlist","map","project","key","date","summary","pagePhoto","sin","bannerLogo","bannerOverlayLogo","AdventureEntry","locationStyle","color","locationColor","dateStyle","backgroundColor","location","AdventureAlbum","adventure","title","dates","AdventurePost","useParams","find","entry","banner","blogPost","content","type","header","text","src1","alt1","src2","alt2","src3","alt3","ExperienceEntry","whenStyle","when","description","ExperienceAlbum","experience","logo","whencolor","whenColor","StillWorking","Footer","FontAwesomeIcon","icon","faLinkedin","faXTwitter","faThreads","faEnvelope","Home","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.fd099440.chunk.js","sourcesContent":["// UseTypeWriter.js\nimport { useEffect, useState } from 'react';\n\nconst useTypewriter = (fullText, typingSpeed = 20, selectedLanguage) => {\n    const [displayedText, setDisplayedText] = useState('');\n  \n    useEffect(() => {\n      setDisplayedText(''); // Clear the text when the language changes\n  \n      let index = 0;\n      const intervalId = setInterval(() => {\n        if (index < fullText.length) {\n          setDisplayedText((prev) => prev + fullText.charAt(index));\n          index++;\n        } else {\n          clearInterval(intervalId);\n        }\n      }, typingSpeed);\n  \n      return () => clearInterval(intervalId);\n    }, [fullText, typingSpeed, selectedLanguage]);\n  \n    return displayedText;\n  };\n\nexport default useTypewriter;","// Banner.js\nimport React, { useEffect } from 'react';\nimport './banner.css'; \nimport useTypewriter from './UseTypeWriter';\n\n\n\nconst Banner = ({ selectedLanguage }) => {\n  const textTranslations = {\n    intro: {\n      English: \"  Hi, my name is Izzy. I love exploring the world around me. Welcome to my website!\",\n      中文: \"  嗨，我是 Izzy。我喜歡探索我周圍美麗的世界。歡迎來到我的網站！\"\n    },\n    passion: {\n      English: \" Truth, improvement, and altruism fuel my passion as a multidisciplinary engineer.\",\n      中文: \" 追求真理、終身學習和利他主義激發了我作為多學科工程師的熱情。\"\n    },\n    photography: {\n      English: \" In my free time, I enjoy backpacking and capturing the wonders of nature with my camera!\",\n      中文: \" 在空閒時間，我喜歡背包旅行，並用相機捕捉大自然的奇觀！\"\n    },\n    piano: {\n      English: \" I also love attending classical concerts and playing the piano. Beethoven is my favorite composer!\",\n      中文: \" 我也喜歡參加古典音樂會和彈鋼琴。貝多芬是我最喜歡的作曲家！\"\n    },\n    countries: {\n      English: \" 13 countries\",\n      中文: \" 13 個國家\"\n    },\n    nationalParks: {\n      English: \" 6 National Parks\",\n      中文: \" 6 個國家公園\"\n    },\n    states: {\n      English: \" 17 States\",\n      中文: \" 17 個州\"\n    }\n  };\n\n  const text0 = useTypewriter(textTranslations.intro[selectedLanguage], 20, selectedLanguage);\n  const text1 = useTypewriter(textTranslations.passion[selectedLanguage], 20, selectedLanguage);\n  const text2 = useTypewriter(textTranslations.photography[selectedLanguage], 20, selectedLanguage);\n  const text3 = useTypewriter(textTranslations.piano[selectedLanguage], 20, selectedLanguage);\n  const text4 = useTypewriter(textTranslations.countries[selectedLanguage], 20, selectedLanguage);\n  const text5 = useTypewriter(textTranslations.nationalParks[selectedLanguage], 20, selectedLanguage);\n  const text6 = useTypewriter(textTranslations.states[selectedLanguage], 20, selectedLanguage);\n  useEffect(() => {\n    const handleScroll = () => {\n      const bannerLogo0 = document.querySelector('.banner-logo-0');\n      const bannerOverlayLogo0 = document.querySelector('.banner-overlay-logo-0');\n\n      const bannerLogo1 = document.querySelector('.banner-logo-1');\n      const bannerOverlayLogo1 = document.querySelector('.banner-overlay-logo-1');\n\n      const bannerLogo2 = document.querySelector('.banner-logo-2');\n      const bannerOverlayLogo2 = document.querySelector('.banner-overlay-logo-2');\n      \n      const bannerLogo3 = document.querySelector('.banner-logo-3');\n      const bannerOverlayLogo3 = document.querySelector('.banner-overlay-logo-3');\n      const scrollPosition = window.scrollY;\n\n      // Calculate the degree of transformation based on scroll position\n      const scaleValue = Math.min(1, 1 + scrollPosition / 1000); // Adjust the divisor to control the scaling speed\n      const rotateValue = Math.min(scrollPosition % 720, 720 - scrollPosition % 720); // Rotate based on scroll position\n\n      // Apply transformations\n      bannerLogo0.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n      bannerOverlayLogo0.style.transform = `scale(${scaleValue})`;\n\n      bannerLogo1.style.transform = `scale(${scaleValue}) rotate(${-rotateValue}deg)`;\n      bannerOverlayLogo1.style.transform = `scale(${scaleValue})`;\n\n      bannerLogo2.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n      bannerOverlayLogo2.style.transform = `scale(${scaleValue})`;\n\n      bannerLogo3.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n      bannerOverlayLogo3.style.transform = `scale(${scaleValue})`;\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  \n  return (\n    <div>\n      <div className=\"banner-container\">\n        <div className=\"banner-image-overlay\">\n          <img className=\"banner-logo-0\" src=\"../images/home/izzy-pirate.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n          <img className=\"banner-overlay-logo-0\" src=\"../images/home/izzy-pirate-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n        </div>\n        <div className=\"banner-header-text\">\n          <h1>{text0}</h1>\n        </div>\n      </div>\n\n      <div className=\"banner-container\">\n        <div className=\"banner-header-text\">\n          <h1>{text1}</h1>\n        </div>\n        <div className=\"banner-image-overlay\">\n          <img className=\"banner-logo-1\" src=\"../images/home/izzy-professional.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n          <img className=\"banner-overlay-logo-1\" src=\"../images/home/izzy-professional-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n        </div>\n      </div>\n\n      <div className=\"banner-container\">\n        <div className=\"banner-image-overlay\">\n          <img className=\"banner-logo-2\" src=\"../images/home/izzy-photographer.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n          <img className=\"banner-overlay-logo-2\" src=\"../images/home/izzy-photographer-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n        </div>\n        <div className=\"banner-header-text\">\n          <h1>{text2}</h1>\n        </div>\n      </div>\n\n      <div className=\"banner-container\">\n        <div className=\"banner-header-text\">\n          <h1>{text3}</h1>\n        </div>\n        <div className=\"banner-image-overlay\">\n          <img className=\"banner-logo-3\" src=\"../images/home/izzy-piano.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n          <img className=\"banner-overlay-logo-3\" src=\"../images/home/izzy-piano-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n        </div>\n      </div>\n      <div className=\"stat-container\">\n        <div className=\"stat-box\">\n          <img src=\"../images/home/countries-count.png\" alt=\"Countries Logo\"></img>\n          <p>{text4}</p>\n        </div>\n        <div className=\"stat-box\">\n          <img src=\"../images/home/national-parks-count.png\" alt=\"Countries Logo\"></img>\n          <p>{text5}</p>\n        </div>\n        <div className=\"stat-box\">\n          <img src=\"../images/home/states-count.png\" alt=\"Countries Logo\"></img>\n          <p>{text6}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Banner;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css';\n\nconst Header = ({ selectedLanguage, setSelectedLanguage }) => {\n  const [isDropdownVisible, setDropdownVisible] = useState(false);\n\n  const toggleDropdown = () => {\n    setDropdownVisible(!isDropdownVisible);\n  };\n\n  const handleLanguageSelect = (language) => {\n    setSelectedLanguage(language);\n    setDropdownVisible(false);\n  };\n\n  const getText = (textKey) => {\n    const translations = {\n      Explorer: {\n        English: 'Izzy The Explorer',\n        中文: '探險家 Izzy',\n      },\n      Projects: {\n        English: 'Projects',\n        中文: '專案',\n      },\n      Adventures: {\n        English: 'Adventures',\n        中文: '冒險',\n      },\n      Notes: {\n        English: 'Notes',\n        中文: '筆記',\n      },\n      Experience: {\n        English: 'Experience',\n        中文: '經驗',\n      },\n    };\n    return translations[textKey][selectedLanguage];\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"logo-container\">\n        <Link to=\"/\">\n          <div className=\"image-overlay\">\n            <img className=\"logo\" src=\"../images/home/izzy-pirate.png\" loading=\"lazy\" alt=\"Izzy Logo\" />\n            <img className=\"overlay-logo\" src=\"../images/home/izzy-pirate-overlay.png\" loading=\"lazy\" alt=\"Overlay Logo\" />\n          </div>\n          <h1 className=\"header-text\">{getText('Explorer')}</h1>\n        </Link>\n      </div>\n      <nav className=\"nav-links\">\n        <Link to=\"/experience\" className=\"nav-link\">{getText('Experience')}</Link>\n        <Link to=\"/projects\" className=\"nav-link\">{getText('Projects')}</Link>\n        <Link to=\"/adventures\" className=\"nav-link\">{getText('Adventures')}</Link>\n        <Link to=\"/notes\" className=\"nav-link\">{getText('Notes')}</Link>\n      </nav>\n      <div className=\"language-selector\" onClick={toggleDropdown}>\n        <span>{selectedLanguage}</span>\n        <i className=\"arrow-down\">▾</i>\n        {isDropdownVisible && (\n          <ul className=\"language-dropdown\">\n            <li onClick={() => handleLanguageSelect('English')}>English</li>\n            <li onClick={() => handleLanguageSelect('中文')}>中文</li>\n          </ul>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","// components/ProjectEntry.js\nimport React from 'react';\nimport './master.css';\nimport './projects.css';\n\nclass ProjectEntry extends React.Component {\n\n  render() {\n\n    const image_path = \"../images/projects/\" + this.props.src;\n\n    const NeedworkSlugs = [\n      'the-duality-of-mouse',\n      'izzyweb',\n      'neuronet',\n      'the-clampanion'\n  ];\n\n  const isExternal = this.props.slug.startsWith('http');\n\n    // Determine the correct linkPath\n    const linkPath = isExternal\n      ? this.props.slug // Use the slug directly for external links\n      : NeedworkSlugs.includes(this.props.slug)\n        ? \"https://izzyjhuang.com/#/notes\" // Redirect to the \"Still Working\" page\n        : `${this.props.slug}`; // Redirect to the internal adventure post\n\n    return (\n      <div className=\"project-container\">\n        <div className=\"project-entry-block\">\n          {/* Use <a> tag for both external and internal links */}\n          <a href={linkPath} target={isExternal ? \"_self\" : \"_self\"} rel=\"noopener noreferrer\">\n            <img className=\"project-img\" src={image_path} alt={image_path} loading=\"lazy\" />\n            <div className=\"project-caption\">{this.props.caption}</div>\n            <div className=\"project-genre\">{this.props.genre}</div>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectEntry;","// components/ProjectAlbum.js\nimport React from 'react';\nimport ProjectEntry from './ProjectEntry';\nimport entries from './data/project-entries';\nimport './master.css';\nimport './projects.css';\n\nclass ProjectAlbum extends React.Component {\n\n    render() {\n\n        return (\n            <div className= \"flex-container\">\n            {\n                entries.itemlist.map((project) => {\n                    return <ProjectEntry key={project.src} src={project.src} slug={project.slug} caption={project.caption} date={project.date} genre={project.genre} summary={project.summary}/>\n                })\n            }\n            </div>\n        )\n    }\n};\n\nexport default ProjectAlbum;","// Projects.js\nimport React, { useEffect } from 'react';\nimport ProjectAlbum from './ProjectAlbum';\nimport useTypewriter from './UseTypeWriter'; // Import the custom hook\nimport './master.css';\n\n\nconst Projects = ({ selectedLanguage }) => {\n     // Define translations for the full text\n     const textTranslations = {\n      English: \"  You can't use up creativity. The more you use, the more you have.\",\n      中文: \"  創造力是無窮無盡的，你用越多，你擁有的就越多。\"\n  };\n\n  // Get the full text based on the selected language\n  const fullText = textTranslations[selectedLanguage] || textTranslations['English'];\n\n  // Use the custom useTypewriter hook\n  const displayedText = useTypewriter(fullText, 20, selectedLanguage);\n\n  // Scroll event handling for image scaling and rotation\n  useEffect(() => {\n      const handleScroll = () => {\n          const pagePhoto = document.querySelector('.banner-logo-p');\n          const scrollPosition = window.scrollY;\n\n          const scaleValue = 0.95 + Math.sin((scrollPosition + 180) / 60) / 10; // Control scaling\n          const rotateValue = Math.sin(scrollPosition / 60) * 30; // Rotate based on scroll\n\n          pagePhoto.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n      };\n\n      window.addEventListener('scroll', handleScroll);\n\n      // Cleanup function to remove scroll listener when component unmounts\n      return () => {\n          window.removeEventListener('scroll', handleScroll);\n      };\n  }, []); // Empty dependency array to run only on mount/unmount\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const bannerLogo = document.querySelector('.banner-logo-p');\n      const bannerOverlayLogo = document.querySelector('.banner-overlay-logo-p');\n      const scrollPosition = window.scrollY;\n\n      // Calculate the degree of transformation based on scroll position\n      const scaleValue = Math.min(1, 1 + scrollPosition / 1000); // Adjust the divisor to control the scaling speed\n      const rotateValue = Math.min(scrollPosition % 720, 720 - scrollPosition % 720); // Rotate based on scroll position\n\n      // Apply transformations\n      bannerLogo.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n      bannerOverlayLogo.style.transform = `scale(${scaleValue})`;\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n\n    return (\n        <div>\n          <div className=\"page-warmer\">\n            <div className=\"banner-image-overlay\">\n              <img className=\"banner-logo-p\" src=\"../images/home/izzy-photographer.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n              <img className=\"banner-overlay-logo-p\" src=\"../images/home/izzy-photographer-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n            </div>                \n            <h1 className=\"page-text\">{displayedText}</h1> \n            </div>\n          <ProjectAlbum />\n        </div>\n      );\n};\n\nexport default Projects;","// AdventureEntry.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass AdventureEntry extends React.Component {\n\n    render() {\n        const image_path = \"../images/adventures/\" + this.props.src;\n\n        // Dynamic inline style for location color\n        const locationStyle = {\n            color: this.props.locationColor || \"#043fac\" // Default to blue if color is not provided\n        };\n        const dateStyle = {\n            backgroundColor: this.props.locationColor || \"#043fac\" // Default to blue if color is not provided\n        };\n\n        const CompletedSlugs = [\n            'hvolsvollur-0824',\n            'albania-1223',\n            'hungary-0323',\n            'slovakia-0323',\n            'austria-0323',\n            'czechia-0323'\n        ];\n\n        const linkPath = CompletedSlugs.includes(this.props.slug) \n            ? `/adventures/${this.props.slug}` \n            : \"/notes\"; \n\n\n        return (\n            <div className=\"adventure-container\">\n                <div className=\"adventure-entry-block\">\n                    <Link to={linkPath}>\n                    {/* <div className=\"adventure-topblock\"> */}\n                        <img className=\"adventure-img\" src={image_path} alt={image_path} loading=\"lazy\"/>\n                        <div className=\"adventure-caption\">{this.props.caption}</div>\n                    {/* </div>\n                    <div className=\"adventure-bottomblock\"> */}\n                        <div className=\"adventure-date\" style={dateStyle}>{this.props.date}</div>\n                        <div className=\"adventure-location\" style={locationStyle}>{this.props.location}</div>\n                    {/* </div> */}\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AdventureEntry;","// AdventureAlbum.js\nimport React from 'react';\nimport AdventureEntry from './AdventureEntry';\nimport entries from './data/adventure-entries';\n\nclass AdventureAlbum extends React.Component {\n\n    render() {\n\n        return (\n            <div className= \"flex-container\">\n            {\n                entries.itemlist.map((adventure) => {\n                    return <AdventureEntry \n                    key={adventure.src} \n                    src={adventure.src} \n                    location={adventure.location} \n                    locationColor={adventure.locationColor}\n                    date={adventure.date} \n                    caption={adventure.caption} \n                    slug={adventure.slug}\n                    genre={adventure.genre}\n                    title={adventure.title}\n                    dates={adventure.dates}/>\n                })\n            }\n            </div>\n        )\n    }\n}\n\nexport default AdventureAlbum;","// Adventures.js\nimport React, { useEffect } from 'react';\nimport AdventureAlbum from './AdventureAlbum';\nimport useTypewriter from './UseTypeWriter'; // Import the custom hook\nimport \"./master.css\";\nimport \"./adventures.css\";\n\nconst Adventures = ({ selectedLanguage }) => {\n    // Define translations for the full text\n    const textTranslations = {\n        English: \"  My favorite adventure was going Skydiving in Utah! I'm visiting Hobbiton in New Zealand next!\",\n        中文: \"  我最喜歡的冒險是去猶他州跳傘！我接下來要去紐西蘭看拍攝哈比人的哈比屯！\"\n    };\n\n    // Get the full text based on the selected language\n    const fullText = textTranslations[selectedLanguage] || textTranslations['English'];\n\n    // Use the custom useTypewriter hook\n    const displayedText = useTypewriter(fullText, 20, selectedLanguage);\n\n    // Scroll event handling for image scaling and rotation\n    useEffect(() => {\n        const handleScroll = () => {\n            const pagePhoto = document.querySelector('.page-photo');\n            const scrollPosition = window.scrollY;\n\n            const scaleValue = 0.95 + Math.sin((scrollPosition + 180) / 60) / 10; // Control scaling\n            const rotateValue = Math.sin(scrollPosition / 60) * 30; // Rotate based on scroll\n\n            pagePhoto.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n        };\n\n        window.addEventListener('scroll', handleScroll);\n\n        // Cleanup function to remove scroll listener when component unmounts\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []); // Empty dependency array to run only on mount/unmount\n\n    return (\n        <div>\n            <div className=\"page-warmer\">\n                <img className=\"page-photo\" src=\"../images/adventures/skydive-moab.png\" alt=\"skydive-moab\" loading=\"lazy\" />\n                <h1 className=\"page-text\">{displayedText}</h1> {/* Display the typing text */}\n            </div>\n            <AdventureAlbum />\n        </div>\n    );\n}\n\nexport default Adventures;","// AdventurePost.js\nimport React from 'react'\nimport { useParams } from 'react-router-dom'\nimport entries from './data/adventure-entries'\nimport './adventures.css'\n\nconst AdventurePost = () => {\n    const { slug } = useParams()\n\n    // Find the corresponding adventure entry by its slug\n    const adventure = entries.itemlist.find(entry => entry.slug === slug)\n\n    if (!adventure) {\n        return <div>Adventure not found</div>\n    }\n\n    return (\n        <div className=\"adventure-post\">\n            <img className=\"adventure-banner\" src={`../images/adventures/${adventure.banner}`} alt={adventure.caption}  loading=\"lazy\"/>\n            <div className=\"adventure-poster\">\n                <h2 className=\"adventure-genre\">{adventure.genre}</h2>\n                <h1 className=\"adventure-title\">{adventure.title}</h1>\n                <h3 className=\"adventure-dates\">{adventure.dates}</h3>\n                <div className=\"adventure-blog-content\">\n                {/* Loop through the blog content and render paragraphs and images */}\n                {adventure.blogPost.map((content, index) => {\n                    if (content.type === 'paragraph') {\n                        return (\n                            <div className=\"paragraph\" key={`${slug}-paragraph-${index}`}>\n                                <h4>{content.header}</h4>\n                                <p>{content.text}</p>\n                            </div>\n                        )\n                    } else if (content.type === 'images-3') {\n                        return (\n                            <div className=\"images-3\" key={`${slug}-images3-${index}`}>\n                                <div className=\"image-box\">\n                                    <img src={`../images/adventures/${content.src1}`} alt={content.alt1} loading=\"lazy\"/>\n                                    <h5>{content.alt1}</h5>\n                                </div>\n                                <div className=\"image-box\">\n                                    <img src={`../images/adventures/${content.src2}`} alt={content.alt2} loading=\"lazy\"/>\n                                    <h5>{content.alt2}</h5>\n                                </div>\n                                <div className=\"image-box\">\n                                    <img src={`../images/adventures/${content.src3}`} alt={content.alt3} loading=\"lazy\"/>\n                                    <h5>{content.alt3}</h5>\n                                </div>\n                            </div>\n                        )\n                    } else if (content.type === 'images-2') {\n                        return (\n                            <div className=\"images-2\" key={`${slug}-images2-${index}`}>\n                                <img src={`../images/adventures/${content.src1}`} alt={content.alt1} loading=\"lazy\"/>\n                                <img src={`../images/adventures/${content.src2}`} alt={content.alt2} loading=\"lazy\"/>\n                            </div>\n                        )\n                    } else if (content.type === 'image') {\n                        return (\n                            <img key={`${slug}-image-${index}`} src={`../images/adventures/${content.src}`} alt={content.alt} className=\"adventure-sub-img\" loading=\"lazy\"/>\n                        )\n                    } else {\n                        return null\n                    }\n                })}\n            </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default AdventurePost","// ExperienceEntry.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ExperienceEntry extends React.Component {\n\n    render() {\n        const image_path = \"../images/experience/\" + this.props.src;\n\n        // Dynamic inline style for location color\n        const locationStyle = {\n            color: this.props.locationColor || \"#043fac\" // Default to blue if color is not provided\n        };\n\n        const whenStyle = {\n            backgroundColor: this.props.locationColor || \"#043fac\" // Default to blue if color is not provided\n        };\n\n        const CompletedSlugs = [];\n\n        const linkPath = CompletedSlugs.includes(this.props.slug) \n            ? `/experience/${this.props.slug}` \n            : \"/notes\"; \n\n\n        return (\n            <div className=\"experience-container\">\n                <div className=\"experience-entry-block\">\n                    <Link to={linkPath}>\n                        <img className=\"experience-img\" src={image_path} alt={image_path} loading=\"lazy\"/>\n                        <div className=\"experience-caption\">{this.props.caption}</div>\n                        <div className=\"experience-when\" style={whenStyle}>{this.props.when}</div>\n                        <div className=\"experience-description\" style={locationStyle}>{this.props.description}</div>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExperienceEntry;","// ExperienceAlbum.js\nimport React from 'react';\nimport ExperienceEntry from './ExperienceEntry';\nimport entries from './data/experience-entries';\n\nclass ExperienceAlbum extends React.Component {\n\n    render() {\n\n        return (\n            <div className= \"flex-container\">\n            {\n                entries.itemlist.map((experience) => {\n                    return <ExperienceEntry \n                    key={experience.src} \n                    src={experience.src} \n                    logo={experience.logo} \n                    caption={experience.caption}\n                    when={experience.when}\n                    whencolor={experience.whenColor} \n                    slug={experience.slug}\n                    description={experience.description}/>\n                })\n            }\n            </div>\n        )\n    }\n}\n\nexport default ExperienceAlbum;","// Experience.js\nimport React, { useEffect } from 'react';\nimport ExperienceAlbum from './ExperienceAlbum';\nimport useTypewriter from './UseTypeWriter'; // Import the custom hook\nimport \"./master.css\";\nimport \"./experience.css\";\n\nconst Experience = ({ selectedLanguage }) => {\n    // Define translations for the full text\n    const textTranslations = {\n        English: \"  \\\"Whatever you do, work at it with all your heart, as working for the Lord, not for human masters.\\\" (Colossians 3:23)\",\n        中文: \"  無論做甚麼，都要全心全意地做，像是給主做的，不是給人做的。 (歌羅西書 3:23)\"\n    };\n\n    // Get the full text based on the selected language\n    const fullText = textTranslations[selectedLanguage] || textTranslations['English'];\n\n    // Use the custom useTypewriter hook\n    const displayedText = useTypewriter(fullText, 20, selectedLanguage);\n\n    // Scroll event handling for image scaling and rotation\n    useEffect(() => {\n        const handleScroll = () => {\n            const pagePhoto = document.querySelector('.banner-logo-e');\n            const scrollPosition = window.scrollY;\n\n            const scaleValue = 0.95 + Math.sin((scrollPosition + 180) / 60) / 10; // Control scaling\n            const rotateValue = Math.sin(scrollPosition / 60) * 30; // Rotate based on scroll\n\n            pagePhoto.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n        };\n\n        window.addEventListener('scroll', handleScroll);\n\n        // Cleanup function to remove scroll listener when component unmounts\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []); // Empty dependency array to run only on mount/unmount\n\n    useEffect(() => {\n      const handleScroll = () => {\n        const bannerLogo = document.querySelector('.banner-logo-e');\n        const bannerOverlayLogo = document.querySelector('.banner-overlay-logo-e');\n        const scrollPosition = window.scrollY;\n  \n        // Calculate the degree of transformation based on scroll position\n        const scaleValue = Math.min(1, 1 + scrollPosition / 1000); // Adjust the divisor to control the scaling speed\n        const rotateValue = Math.min(scrollPosition % 720, 720 - scrollPosition % 720); // Rotate based on scroll position\n  \n        // Apply transformations\n        bannerLogo.style.transform = `scale(${scaleValue}) rotate(${rotateValue}deg)`;\n        bannerOverlayLogo.style.transform = `scale(${scaleValue})`;\n      };\n  \n      window.addEventListener('scroll', handleScroll);\n  \n      return () => {\n        window.removeEventListener('scroll', handleScroll);\n      };\n    }, []);\n\n    return (\n        <div>\n            <div className=\"page-warmer\">\n            <div className=\"banner-image-overlay\">\n              <img className=\"banner-logo-e\" src=\"../images/home/izzy-professional.png\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n              <img className=\"banner-overlay-logo-e\" src=\"../images/home/izzy-professional-overlay.png\" alt=\"Overlay Logo\" loading=\"lazy\"/>\n            </div>                \n            <h1 className=\"page-text\">{displayedText}</h1> \n            </div>\n            <ExperienceAlbum />\n        </div>\n    );\n}\n\nexport default Experience;","// still-working.js\nimport React from 'react';\nimport './stillworking.css'; \nimport useTypewriter from './UseTypeWriter';\n\n\n\nconst StillWorking = ({ selectedLanguage }) => {\n  const textTranslations = {\n      English: \"  I'm still working on this one, stay tuned!\",\n      中文: \"  這篇我快做出來了，敬請期待！\"\n  };\n\n  // const fallbackLanguage = 'English';\n  const fullText = textTranslations[selectedLanguage] || textTranslations[\"English\"];\n\n  const displayedText = useTypewriter(fullText, 20, selectedLanguage);\n\n  return (\n    <div>\n      <div className=\"still-working-container\">\n          <img className=\"still-working-img\" src=\"images/home/still-working.jpg\" alt=\"Izzy Logo\" loading=\"lazy\"/>\n        <div className=\"still-working-header-text\">\n          <h1>{displayedText}</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StillWorking;","// Notes.js\nimport React from 'react';\nimport StillWorking from './StillWorking';\n\nconst Notes = ({ selectedLanguage }) => {\n    return (\n      <div>\n        {/* Pass the selectedLanguage prop to StillWorking */}\n        <StillWorking selectedLanguage={selectedLanguage} />\n      </div>\n    );\n  };\n\nexport default Notes;","import React from 'react';\nimport './footer.css'; // Assuming you store the CSS in Footer.css\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // Import FontAwesome\nimport { faThreads, faXTwitter, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons'; // For non-branded icons\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-container\">\n      <div className=\"footer-icons\">\n      <a href=\"https://linkedin.com/in/izzyhuang\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <FontAwesomeIcon icon={faLinkedin} /> \n          <span>LinkedIn</span>\n        </a>\n        <a href=\"https://x.com/izzyjhuang\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <FontAwesomeIcon icon={faXTwitter} />\n          <span>Twitter</span>\n        </a>\n        <a href=\"https://www.threads.net/@izh_27\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <FontAwesomeIcon icon={faThreads} />\n          <span>Threads</span>\n        </a>\n        <a href=\"mailto:izzythebroker@gmail.com\">\n          <FontAwesomeIcon icon={faEnvelope} /> \n          <span>Email</span>\n        </a>\n      </div>\n\n        <div className=\"footer-links\">\n            <h5>This website was built with \n                <a href=\"https://react.dev/\" target=\"_blank\" rel=\"noopener noreferrer\"> ReactJS</a>\n            </h5>\n            <h5>© Copyright 2024 Izzy Huang</h5>\n        </div>\n    </div>\n  );\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'; // Changed to HashRouter\nimport Banner from './components/Banner';\nimport Header from './components/Header';\nimport Projects from './components/Projects';\nimport Adventures from './components/Adventures';\nimport AdventurePost from './components/AdventurePost';\nimport Experience from './components/Experience';\nimport Notes from './components/Notes';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n  // State for managing the selected language\n  const [selectedLanguage, setSelectedLanguage] = useState('English');\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {/* Pass selectedLanguage and setSelectedLanguage to the Header component */}\n        <Header selectedLanguage={selectedLanguage} setSelectedLanguage={setSelectedLanguage} />\n        \n        <Routes>\n          <Route path=\"/\" element={<Home selectedLanguage={selectedLanguage} />} />\n          <Route path=\"/projects\" element={<Projects selectedLanguage={selectedLanguage}/>} />\n          <Route path=\"/adventures\" element={<Adventures selectedLanguage={selectedLanguage} />} />\n          <Route path=\"/adventures/:slug\" element={<AdventurePost />} />\n          <Route path=\"/notes\" element={<Notes selectedLanguage={selectedLanguage} />} />\n          <Route path=\"/experience\" element={<Experience selectedLanguage={selectedLanguage} />}/>\n        </Routes>\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\n// Pass selectedLanguage to the Banner component in the Home route\nconst Home = ({ selectedLanguage }) => (\n  <div>\n    <Banner selectedLanguage={selectedLanguage} />\n    <div></div>\n  </div>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}