{"ast":null,"code":"var _jsxFileName = \"/Users/izzyhuang/Documents/web_dev/ReactJS_Coursera/myweb/src/components/Adventures.js\";\n// Adventures.js\nimport React, { useEffect, useState } from 'react';\nimport AdventureAlbum from './AdventureAlbum';\nimport \"./master.css\";\nimport \"./adventures.css\";\nconst Adventures = () => {\n  const [displayedText, setDisplayedText] = useState(''); // State to store the text being typed\n  const fullText = \"M y favorite adventure is going Skydiving in Utah! I'm visiting Hobbiton in New Zealand next!\";\n  useEffect(() => {\n    let index = 0;\n    const typingSpeed = 100; // Adjust the typing speed (in ms)\n\n    const typeWriter = () => {\n      if (index < fullText.length) {\n        setDisplayedText(prev => prev + fullText.charAt(index));\n        index++;\n      } else {\n        clearInterval(intervalId); // Stop the interval once the full text is typed\n      }\n    };\n\n    // Set an interval to run typeWriter at the specified typing speed\n    const intervalId = setInterval(typeWriter, typingSpeed);\n\n    // Cleanup function to clear the interval if the component unmounts\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [fullText]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-warmer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"page-photo\",\n    src: \"../images/adventures/skydive-moab.png\",\n    alt: \"skydive-moab\",\n    loading: \"lazy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"page-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, displayedText), \" \"), /*#__PURE__*/React.createElement(AdventureAlbum, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\nexport default Adventures;","map":{"version":3,"names":["React","useEffect","useState","AdventureAlbum","Adventures","displayedText","setDisplayedText","fullText","index","typingSpeed","typeWriter","length","prev","charAt","clearInterval","intervalId","setInterval","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","loading"],"sources":["/Users/izzyhuang/Documents/web_dev/ReactJS_Coursera/myweb/src/components/Adventures.js"],"sourcesContent":["// Adventures.js\nimport React, { useEffect, useState } from 'react';\nimport AdventureAlbum from './AdventureAlbum';\nimport \"./master.css\";\nimport \"./adventures.css\"\n\nconst Adventures = () => {\n    const [displayedText, setDisplayedText] = useState(''); // State to store the text being typed\n    const fullText = \"M y favorite adventure is going Skydiving in Utah! I'm visiting Hobbiton in New Zealand next!\";\n\n    useEffect(() => {\n      let index = 0;\n      const typingSpeed = 100; // Adjust the typing speed (in ms)\n\n      const typeWriter = () => {\n          if (index < fullText.length) {\n              setDisplayedText((prev) => prev + fullText.charAt(index));\n              index++;\n          } else {\n              clearInterval(intervalId); // Stop the interval once the full text is typed\n          }\n      };\n\n      // Set an interval to run typeWriter at the specified typing speed\n      const intervalId = setInterval(typeWriter, typingSpeed);\n\n      // Cleanup function to clear the interval if the component unmounts\n      return () => {\n          clearInterval(intervalId);\n      };\n  }, [fullText]);\n\n\n    return (\n        <div>\n            <div className=\"page-warmer\">\n                <img className=\"page-photo\" src=\"../images/adventures/skydive-moab.png\" alt=\"skydive-moab\" loading=\"lazy\" />\n                <h1 className=\"page-text\">{displayedText}</h1> {/* Display the typing text */}\n            </div>\n            <AdventureAlbum />\n        </div>\n    );\n}\n\nexport default Adventures;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,cAAc;AACrB,OAAO,kBAAkB;AAEzB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAMK,QAAQ,GAAG,+FAA+F;EAEhHN,SAAS,CAAC,MAAM;IACd,IAAIO,KAAK,GAAG,CAAC;IACb,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;;IAEzB,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACrB,IAAIF,KAAK,GAAGD,QAAQ,CAACI,MAAM,EAAE;QACzBL,gBAAgB,CAAEM,IAAI,IAAKA,IAAI,GAAGL,QAAQ,CAACM,MAAM,CAACL,KAAK,CAAC,CAAC;QACzDA,KAAK,EAAE;MACX,CAAC,MAAM;QACHM,aAAa,CAACC,UAAU,CAAC,CAAC,CAAC;MAC/B;IACJ,CAAC;;IAED;IACA,MAAMA,UAAU,GAAGC,WAAW,CAACN,UAAU,EAAED,WAAW,CAAC;;IAEvD;IACA,OAAO,MAAM;MACTK,aAAa,CAACC,UAAU,CAAC;IAC7B,CAAC;EACL,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAGZ,oBACIP,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIvB,KAAA,CAAAiB,aAAA;IAAKO,SAAS,EAAC,aAAa;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBvB,KAAA,CAAAiB,aAAA;IAAKO,SAAS,EAAC,YAAY;IAACC,GAAG,EAAC,uCAAuC;IAACC,GAAG,EAAC,cAAc;IAACC,OAAO,EAAC,MAAM;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC5GvB,KAAA,CAAAiB,aAAA;IAAIO,SAAS,EAAC,WAAW;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAElB,aAAkB,CAAC,KAC7C,CAAC,eACNL,KAAA,CAAAiB,aAAA,CAACd,cAAc;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChB,CAAC;AAEd,CAAC;AAED,eAAenB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}